{
  "info": {
    "name": "Grow5x E2E API Tests",
    "description": "Colección completa de pruebas E2E para validar funcionalidad de Grow5x",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "grow5x-e2e-tests"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://grow5x.app",
      "type": "string"
    },
    {
      "key": "testEmail",
      "value": "test.e2e.{{$timestamp}}@example.com",
      "type": "string"
    },
    {
      "key": "testPassword",
      "value": "TestPassword123!",
      "type": "string"
    },
    {
      "key": "referralCode",
      "value": "04ZABST6",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('API está disponible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Respuesta en tiempo adecuado', function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "health"]
        }
      }
    },
    {
      "name": "2. Registro con Referido",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Registro exitoso', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Respuesta contiene datos de usuario', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('user');",
              "    pm.expect(responseJson.user).to.have.property('email');",
              "    pm.expect(responseJson.user).to.have.property('_id');",
              "    ",
              "    // Guardar ID de usuario para pruebas posteriores",
              "    pm.collectionVariables.set('userId', responseJson.user._id);",
              "});",
              "",
              "pm.test('Relación de referido establecida', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.user).to.have.property('referredBy');",
              "    pm.expect(responseJson.user.referredBy).to.not.be.null;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Usuario Test E2E\",\n  \"fullName\": \"Usuario Test E2E Completo\",\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\",\n  \"confirmPassword\": \"{{testPassword}}\",\n  \"country\": \"España\",\n  \"referralCode\": \"{{referralCode}}\",\n  \"acceptedTerms\": true,\n  \"acceptedRisk\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "register"]
        }
      }
    },
    {
      "name": "3. Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Login exitoso', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Token de autenticación recibido', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('token');",
              "    pm.expect(responseJson.token).to.not.be.empty;",
              "    ",
              "    // Guardar token para pruebas posteriores",
              "    pm.collectionVariables.set('authToken', responseJson.token);",
              "});",
              "",
              "pm.test('Datos de usuario en respuesta', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('user');",
              "    pm.expect(responseJson.user).to.have.property('email', pm.collectionVariables.get('testEmail'));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "login"]
        }
      }
    },
    {
      "name": "4. Verificar Perfil de Usuario",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Acceso autorizado al perfil', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Datos del perfil completos', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('name');",
              "    pm.expect(responseJson).to.have.property('email');",
              "    pm.expect(responseJson).to.have.property('referralCode');",
              "});",
              "",
              "pm.test('Código de referido asignado', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.referralCode).to.not.be.empty;",
              "    pm.expect(responseJson.referralCode).to.have.lengthOf.at.least(6);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/user/profile",
          "host": ["{{baseUrl}}"],
          "path": ["api", "user", "profile"]
        }
      }
    },
    {
      "name": "5. Actualizar Perfil",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Actualización de perfil exitosa', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Cambios guardados correctamente', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('actualizado');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Usuario Test E2E Actualizado\",\n  \"phone\": \"+34600123456\",\n  \"bio\": \"Perfil actualizado durante pruebas E2E\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/user/profile",
          "host": ["{{baseUrl}}"],
          "path": ["api", "user", "profile"]
        }
      }
    },
    {
      "name": "6. Obtener Árbol de Referidos",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Acceso al árbol de referidos', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Estructura del árbol válida', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('referrals');",
              "    pm.expect(responseJson.referrals).to.be.an('array');",
              "});",
              "",
              "pm.test('Estadísticas de referidos', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('totalReferrals');",
              "    pm.expect(responseJson.totalReferrals).to.be.a('number');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/user/referrals",
          "host": ["{{baseUrl}}"],
          "path": ["api", "user", "referrals"]
        }
      }
    },
    {
      "name": "7. Solicitar Recuperación de Contraseña",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Solicitud de recuperación procesada', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Mensaje de confirmación', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('enviado');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/forgot-password",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "forgot-password"]
        }
      }
    },
    {
      "name": "8. Verificar Usuario en Base de Datos",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Usuario existe en base de datos', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Relación de referido confirmada', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('referredBy');",
              "    pm.expect(responseJson.referredBy).to.not.be.null;",
              "});",
              "",
              "pm.test('Datos consistentes', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.email).to.equal(pm.collectionVariables.get('testEmail'));",
              "    pm.expect(responseJson._id).to.equal(pm.collectionVariables.get('userId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/admin/user/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "admin", "user", "{{userId}}"]
        }
      }
    },
    {
      "name": "9. Rate Limiting Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Rate limiting funcional', function () {",
              "    // Después de múltiples requests, debería haber rate limiting",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 429]);",
              "});",
              "",
              "pm.test('Headers de rate limiting presentes', function () {",
              "    if (pm.response.code === 429) {",
              "        pm.expect(pm.response.headers.has('X-RateLimit-Limit')).to.be.true;",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "health"]
        }
      }
    },
    {
      "name": "10. Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Logout exitoso', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Sesión invalidada', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('message');",
              "    pm.expect(responseJson.message).to.include('logout');",
              "});",
              "",
              "// Limpiar variables de sesión",
              "pm.collectionVariables.set('authToken', '');"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/auth/logout",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "logout"]
        }
      }
    }
  ]
}
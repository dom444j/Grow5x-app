#!/bin/bash

# DIAGN√ìSTICO FINAL - IDENTIFICAR POR QU√â NGINX SIGUE DANDO 404
echo "üîç DIAGN√ìSTICO FINAL DEL PROBLEMA 404"
echo "======================================"

# 1. Verificar configuraci√≥n exacta de Nginx
echo "üìå 1. CONFIGURACI√ìN ACTUAL DE NGINX:"
echo "Archivo: /etc/nginx/sites-available/grow5x.app"
echo "Bloque location /api/:"
sudo grep -A 10 -B 2 "location /api/" /etc/nginx/sites-available/grow5x.app
echo ""

# 2. Verificar qu√© archivos est√°n activos
echo "üìå 2. ARCHIVOS ACTIVOS EN NGINX:"
echo "Sites-enabled:"
ls -la /etc/nginx/sites-enabled/
echo ""
echo "Contenido del enlace simb√≥lico:"
readlink -f /etc/nginx/sites-enabled/grow5x.app
echo ""

# 3. Verificar configuraci√≥n completa cargada
echo "üìå 3. CONFIGURACI√ìN CARGADA POR NGINX:"
echo "Buscando todos los bloques server_name grow5x.app:"
sudo nginx -T | grep -A 20 -B 5 "server_name grow5x.app"
echo ""

# 4. Verificar logs de error en tiempo real
echo "üìå 4. LOGS DE ERROR DE NGINX:"
echo "√öltimos errores:"
sudo tail -20 /var/log/nginx/error.log
echo ""

# 5. Hacer una prueba con logs en tiempo real
echo "üìå 5. PRUEBA CON MONITOREO DE LOGS:"
echo "Iniciando monitoreo de logs..."
(
    sudo tail -f /var/log/nginx/access.log &
    TAIL_PID=$!
    sleep 2
    echo "Haciendo petici√≥n de prueba..."
    curl -X POST https://grow5x.app/api/auth/login \
      -H 'Content-Type: application/json' \
      -d '{"identifier":"test","password":"test"}' \
      -w "\nStatus: %{http_code}\n" \
      -s
    sleep 2
    kill $TAIL_PID
) &
wait
echo ""

# 6. Verificar si hay m√∫ltiples configuraciones
echo "üìå 6. VERIFICAR M√öLTIPLES CONFIGURACIONES:"
echo "Buscando todos los archivos que contengan 'grow5x.app':"
sudo find /etc/nginx -name "*.conf" -o -name "grow5x*" | xargs sudo grep -l "grow5x.app" 2>/dev/null
echo ""

# 7. Verificar sintaxis espec√≠fica del proxy_pass
echo "üìå 7. VERIFICAR PROXY_PASS ESPEC√çFICO:"
echo "Todas las l√≠neas proxy_pass en la configuraci√≥n:"
sudo grep -n "proxy_pass" /etc/nginx/sites-available/grow5x.app
echo ""

# 8. Crear configuraci√≥n m√≠nima de prueba
echo "üìå 8. CREANDO CONFIGURACI√ìN M√çNIMA DE PRUEBA:"
sudo tee /tmp/test-minimal.conf > /dev/null << 'EOF'
server {
    listen 8080;
    server_name localhost;
    
    location /api/ {
        proxy_pass http://127.0.0.1:5000/;
        proxy_set_header Host $host;
    }
}
EOF

echo "Configuraci√≥n m√≠nima creada en /tmp/test-minimal.conf"
echo "Probando sintaxis de configuraci√≥n m√≠nima:"
sudo nginx -t -c /tmp/test-minimal.conf
echo ""

# 9. Verificar que el backend realmente est√© en puerto 5000
echo "üìå 9. VERIFICACI√ìN FINAL DEL BACKEND:"
echo "Procesos en puerto 5000:"
sudo netstat -tlnp | grep :5000
echo ""
echo "Respuesta del backend:"
curl -v http://127.0.0.1:5000/api/auth/login \
  -H 'Content-Type: application/json' \
  -d '{"identifier":"test","password":"test"}' \
  2>&1 | head -20
echo ""

# 10. Diagn√≥stico de la diferencia exacta
echo "üìå 10. DIAGN√ìSTICO DE LA DIFERENCIA:"
echo "Backend directo:"
BACKEND_RESPONSE=$(curl -s -X POST http://127.0.0.1:5000/api/auth/login \
  -H 'Content-Type: application/json' \
  -d '{"identifier":"test","password":"test"}' \
  -w "Status: %{http_code}")
echo "$BACKEND_RESPONSE"
echo ""
echo "Nginx:"
NGINX_RESPONSE=$(curl -s -X POST https://grow5x.app/api/auth/login \
  -H 'Content-Type: application/json' \
  -d '{"identifier":"test","password":"test"}' \
  -w "Status: %{http_code}")
echo "$NGINX_RESPONSE"
echo ""

echo "======================================"
echo "üîç RESUMEN DEL DIAGN√ìSTICO:"
echo "Backend: $BACKEND_RESPONSE"
echo "Nginx: $NGINX_RESPONSE"
if [[ "$BACKEND_RESPONSE" == *"401"* && "$NGINX_RESPONSE" == *"404"* ]]; then
    echo "‚ùå PROBLEMA CONFIRMADO: Nginx no est√° enviando las peticiones al backend"
    echo "üîß CAUSA PROBABLE: Error en proxy_pass o configuraci√≥n de location"
else
    echo "‚úÖ Los c√≥digos son diferentes al esperado, revisar manualmente"
fi
echo "======================================"